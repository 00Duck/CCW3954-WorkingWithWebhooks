<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>POST</http_method>
        <name>GitHub Webhook</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	// The 'jsSHA' library has been pre-loaded into your lab instance. 
	// You can retrieve it from https://github.com/Caligatio/jsSHA if 
	// you wish to use it in your own instances. 
	var body   = request.body.dataString; 
	var secret = gs.getProperty('x_snc_cc17_webhook.github_secret'); 
	var sha    = new global.jsSHA('SHA-1', 'TEXT'); 
	sha.setHMACKey(secret, 'TEXT'); 
	sha.update(body); 
	var hmac = sha.getHMAC('HEX'); 

	// Now that we have a hash, compare it with the hash from the request
    if (request.getHeader('X-Hub-Signature') == 'sha1=' + hmac) {

		var grWebhook = new GlideRecord('x_snc_cc17_webhook_stream');
		grWebhook.newRecord();
		grWebhook.source = 'GitHub';

		// Extract unique ID associated with this webhook
		grWebhook.id = request.getHeader('X-GitHub-Delivery');

		// Extract event type associated with this webhook
		// See https://developer.github.com/v3/activity/events/types/
		grWebhook.action = request.getHeader('X-GitHub-Event');

		// Save the payload from the request body
		grWebhook.payload = request.body.dataString;
		grWebhook.insert();
		
	} else {
		
		// The signature did not match, reject the request
        var unauthorized = new sn_ws_err.ServiceError();
        unauthorized.setStatus(401);
        unauthorized.setMessage('Invalid secret');
        response.setError(unauthorized); 
		
	}

})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_cc17_webhook/webhook_handler/github_webhook</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/github_webhook</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>jnerius</sys_created_by>
        <sys_created_on>2017-04-06 20:31:35</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>da8506d02002f2007f44eab520e80382</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>GitHub Webhook</sys_name>
        <sys_package display_value="CC17 Working with Webhooks" source="x_snc_cc17_webhook">c1f9d0a4203132007f44eab520e803e3</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CC17 Working with Webhooks">c1f9d0a4203132007f44eab520e803e3</sys_scope>
        <sys_update_name>sys_ws_operation_da8506d02002f2007f44eab520e80382</sys_update_name>
        <sys_updated_by>jnerius</sys_updated_by>
        <sys_updated_on>2017-04-07 02:42:52</sys_updated_on>
        <web_service_definition display_value="Webhook Handler">4615c6d02002f2007f44eab520e8033f</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
